// ================================== LIST OF KEYS ==================================== //
//                                                                                      //
// Open Explorer (ctrl+\)                                                               //
// Previous Tab on Editor (ctrl+h)                                                      //
// Next Tab on Editor (ctrl+l)                                                          //
// Toggle Full Screen Terminal  (ctrl+z)                                                //
// Save File (ctrl+s)                                                                   //
// Close all Editors or Open Folder (ctrl+q)                                            //
// Copy Relative Path (ctrl+b)                                                          //
// Search Workspace (ctrl+f)                                                            //
// Go down in search workspace, terminal pane or quick open (ctrl+j)                    //
// Go up in search workspace, terminal pane or quick open (ctrl+k)                      //
// Create new Terminal or Editor (ctrl+n)                                               //
// Close Terminal or Editor (ctrl+w)                                                    //
// Search and Replace (ctrl+g)                                                          //
// Toggle Comment (ctrl+c)                                                              //
// File Explorer: Create File (a)                                                       //
// File Explorer: Copy File (y)                                                         //
// File Explorer: Cut File (x)                                                          //
// File Explorer: Paste File (p)                                                        //
// File Explorer: Rename File (r)                                                       //
// File Explorer: Delete File (d)                                                       //
// File Explorer: Remove Folder from Workspace (w)                                      //
//                                                                                      //
// ==================================================================================== //
[
    // ================================================================================
    // Open Explorer (ctrl+\)
    // ================================================================================
    {
        "key": "ctrl+\\",
        "command": "workbench.files.action.focusFilesExplorer",
        "when": "!explorerViewletFocus && explorerViewletVisible"
    },
    {
        "key": "ctrl+\\",
        "command": "workbench.action.closeSidebar",
        "when": "explorerViewletFocus"
    },
    {
        "key": "ctrl+\\",
        "command": "workbench.view.explorer",
        "when": "!explorerViewletFocus && !explorerViewletVisible"
    },
    {
        "key": "ctrl+\\",
        "command": "-workbench.action.splitEditor"
    },
    // ================================================================================
    // Previous Tab on Editor (ctrl+h)
    // ================================================================================
    {
        "key": "ctrl+h",
        "command": "workbench.action.previousEditorInGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+h",
        "command": "-extension.vim_ctrl+h",
        "when": "editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"
    },
    {
        "key": "ctrl+h",
        "command": "-whichkey.searchBindings",
        "when": "whichkeyVisible"
    },
    // ================================================================================
    // Next Tab on Editor (ctrl+l)
    // ================================================================================
    {
        "key": "ctrl+l",
        "command": "workbench.action.nextEditorInGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+l",
        "command": "-workbench.action.chat.clear",
        "when": "hasChatProvider && inChat"
    },
    {
        "key": "ctrl+l",
        "command": "-extension.vim_navigateCtrlL",
        "when": "editorTextFocus && vim.active && vim.use<C-l> && !inDebugRepl"
    },
    {
        "key": "ctrl+l",
        "command": "-notebook.centerActiveCell",
        "when": "notebookEditorFocused"
    },
    {
        "key": "ctrl+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+l",
        "command": "-workbench.action.chat.newChat",
        "when": "chatIsEnabled && inChat"
    },
    // ================================================================================
    // Toggle Full Screen Terminal  (ctrl+z)
    // ================================================================================
    {
        "key": "ctrl+z",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+z",
        "command": "maximizeterminal.openMaximizedTerminal",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+z",
        "command": "-extension.vim_ctrl+z",
        "when": "editorTextFocus && vim.active && vim.use<C-z> && !inDebugRepl"
    },
    {
        "key": "ctrl+z",
        "command": "-inlineChat.unstash",
        "when": "inlineChatHasStashedSession && !editorReadonly"
    },
    {
        "key": "ctrl+z",
        "command": "-undo"
    },
    // ================================================================================
    // Save File (ctrl+s)
    // ================================================================================
    {
        "key": "ctrl+s",
        "command": "workbench.action.files.saveWithoutFormatting"
    },
    {
        "key": "ctrl+k ctrl+shift+s",
        "command": "-workbench.action.files.saveWithoutFormatting"
    },
    {
        "key": "ctrl+s",
        "command": "-workbench.action.files.save"
    },
    {
        "key": "ctrl+s",
        "command": "-extension.vim_ctrl+s",
        "when": "editorTextFocus && vim.active && vim.use<C-s> && !inDebugRepl"
    },
    // ================================================================================
    // Close all Editors or Open Folder (ctrl+q)
    // ================================================================================
    {
        "key": "ctrl+q",
        "command": "workbench.action.closeAllEditors",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.files.openFolder",
        "when": "!editorTextFocus && !terminalFocus && !explorerViewletFocus && !findInputFocussed && !replaceInputFocussed"
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "-workbench.action.files.openFolder",
        "when": "openFolderWorkspaceSupport"
    },
    {
        "key": "ctrl+k ctrl+w",
        "command": "-workbench.action.closeAllEditors"
    },
    {
        "key": "ctrl+q",
        "command": "-extension.vim_winCtrlQ",
        "when": "editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
        "when": "inQuickOpen && inViewsPicker"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quickOpenView"
    },
    // ================================================================================
    // Copy Relative Path (ctrl+b)
    // ================================================================================
    {
        "key": "ctrl+b",
        "command": "copyRelativeFilePath"
    },
    {
        "key": "ctrl+k ctrl+shift+c",
        "command": "-copyRelativeFilePath",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b",
        "command": "-extension.vim_ctrl+b",
        "when": "editorTextFocus && vim.active && vim.use<C-b> && !inDebugRepl && vim.mode != 'Insert'"
    },
    // ================================================================================
    // Search Workspace (ctrl+f)
    // ================================================================================
    {
        "key": "ctrl+f",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "ctrl+f",
        "command": "workbench.action.findInFiles",
        "when": "searchViewletVisible && !searchViewletFocus"
    },
    {
        "key": "ctrl+f",
        "command": "workbench.action.closeSidebar",
        "when": "searchViewletVisible && searchViewletFocus"
    },
    {
        "key": "ctrl+f",
        "command": "workbench.action.terminal.searchWorkspace",
        "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "ctrl+f",
        "command": "workbench.view.search",
        "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.action.terminal.searchWorkspace",
        "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.view.search",
        "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
    },
    {
        "key": "ctrl+f",
        "command": "-actions.find",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+f",
        "command": "-notebook.find",
        "when": "notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.interactive' || notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+f",
        "command": "-settings.action.search",
        "when": "inSettingsEditor"
    },
    {
        "key": "ctrl+f",
        "command": "-repl.action.filter",
        "when": "inDebugRepl && textInputFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-workbench.action.terminal.focusFind",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "ctrl+f",
        "command": "-commentsFocusFilter",
        "when": "focusedView == 'workbench.panel.comments'"
    },
    {
        "key": "ctrl+f",
        "command": "-editor.action.extensioneditor.showfind",
        "when": "!editorFocus && activeEditor == 'workbench.editor.extension'"
    },
    {
        "key": "ctrl+f",
        "command": "-editor.action.webvieweditor.showFind",
        "when": "webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "ctrl+f",
        "command": "-extension.vim_ctrl+f",
        "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+f",
        "command": "-keybindings.editor.searchKeybindings",
        "when": "inKeybindings"
    },
    {
        "key": "ctrl+f",
        "command": "-problems.action.focusFilter",
        "when": "focusedView == 'workbench.panel.markers.view'"
    },
    // ================================================================================
    // Go down in search workspace, terminal pane or quick open (ctrl+j)
    // ================================================================================
    {
        "key": "ctrl+j",
        "command": "search.action.focusNextSearchResult",
        "when": "searchViewletVisible && !terminalFocus && !explorerViewletFocus && (hasSearchResult || inSearchEditor)"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "inQuickOpen"
    },
    {
        "key": "f4",
        "command": "-search.action.focusNextSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+j",
        "command": "-extension.vim_ctrl+j",
        "when": "editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    // ================================================================================
    // Go up in search workspace, terminal pane or quick open (ctrl+k)
    // ================================================================================
    {
        "key": "ctrl+k",
        "command": "search.action.focusPreviousSearchResult",
        "when": "searchViewletVisible && !terminalFocus && !explorerViewletFocus && (hasSearchResult || inSearchEditor)"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenNavigatePrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "-extension.devDocs",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+f4",
        "command": "-search.action.focusPreviousSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "ctrl+k",
        "command": "-extension.vim_ctrl+k",
        "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
    },
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    // ================================================================================
    // Create new Terminal or Editor (ctrl+n)
    // ================================================================================
    {
        "key": "ctrl+n",
        "command": "workbench.action.terminal.new",
        "when": "terminalFocus && (terminalProcessSupported || terminalWebExtensionContributedProfile)"
    },
    {
        "key": "ctrl+shift+`",
        "command": "-workbench.action.terminal.new",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
        "key": "ctrl+n",
        "command": "-extension.vim_ctrl+n",
        "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    // ================================================================================
    // Close Terminal or Editor (ctrl+w)
    // ================================================================================
    {
        "key": "ctrl+w",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+w",
        "command": "-extension.vim_ctrl+w",
        "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    // ================================================================================
    // Search and Replace (ctrl+g)
    // ================================================================================
    {
        "key": "ctrl+g",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorTextFocus && !findWidgetVisible"
    },
    {
        "key": "ctrl+g",
        "command": "actions.find",
        "when": "findWidgetVisible"
    },
    {
        "key": "ctrl+g",
        "command": "closeFindWidget",
        "when": "findInputFocussed || replaceInputFocussed"
    },
    {
        "key": "ctrl+g",
        "command": "-extension.vim_ctrl+g",
        "when": "editorTextFocus && vim.active && vim.use<C-g> && !inDebugRepl"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.terminal.goToRecentDirectory",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    // ================================================================================
    // Toggle Comment (ctrl+c)
    // ================================================================================
    {
        "key": "ctrl+c",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "-editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+c",
        "command": "-workbench.action.terminal.copyAndClearSelection",
        "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
    },
    {
        "key": "ctrl+c",
        "command": "-extension.vim_ctrl+c",
        "when": "editorTextFocus && vim.active && vim.overrideCtrlC && vim.use<C-c> && !inDebugRepl"
    },
    {
        "key": "ctrl+c",
        "command": "-filesExplorer.copy",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+c",
        "command": "-keybindings.editor.copyKeybindingEntry",
        "when": "inKeybindings && keybindingFocus && !whenFocus"
    },
    {
        "key": "ctrl+c",
        "command": "-problems.action.copy",
        "when": "problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view'"
    },
    {
        "key": "ctrl+c",
        "command": "-remote.tunnel.copyAddressInline",
        "when": "tunnelViewFocus && tunnelType == 'Detected' && tunnelViewMultiSelection == 'undefined' || tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
    },
    {
        "key": "ctrl+c",
        "command": "-search.action.copyMatch",
        "when": "fileMatchOrMatchFocus"
    },
    // ================================================================================
    // File Explorer: Create File (a)
    // ================================================================================
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "filesExplorerFocus && !inputFocus"
    },
    // ================================================================================
    // File Explorer: Copy File (y)
    // ================================================================================
    {
        "key": "y",
        "command": "filesExplorer.copy",
        "when": "filesExplorerFocus && !inputFocus"
    },
    // ================================================================================
    // File Explorer: Cut File (x)
    // ================================================================================
    {
        "key": "x",
        "command": "filesExplorer.cut",
        "when": "filesExplorerFocus && !inputFocus"
    },
    // ================================================================================
    // File Explorer: Paste File (p)
    // ================================================================================
    {
        "key": "p",
        "command": "filesExplorer.paste",
        "when": "filesExplorerFocus && !inputFocus"
    },
    // ================================================================================
    // File Explorer: Rename File (r)
    // ================================================================================
    {
        "key": "r",
        "command": "renameFile",
        "when": "filesExplorerFocus && !inputFocus"
    },
    // ================================================================================
    // File Explorer: Delete File (d)
    // ================================================================================
    {
        "key": "d",
        "command": "moveFileToTrash",
        "when": "filesExplorerFocus && !inputFocus"
    },
    // ================================================================================
    // File Explorer: Remove Folder from Workspace (w)
    // ================================================================================
    {
        "key": "w",
        "command": "workbench.action.removeRootFolder",
        "when": "filesExplorerFocus && !inputFocus"
    }
]